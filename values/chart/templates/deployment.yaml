apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superflex-mapp-gateway.fullname" . }}
  labels:
    app: {{ .Values.serviceName }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.serviceName }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "superflex-mapp-gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          ports:
            {{- toYaml .Values.ports | nindent 12 }}
          startupProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
              scheme: HTTP
            failureThreshold: 60
            periodSeconds: 10
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "{{ .Chart.Name }}-conf" #The name(key) value must match pod volumes name(key) value
              mountPath: /conf
      terminationGracePeriodSeconds: 20
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: "{{ .Chart.Name }}-conf"
          configMap:
            name: "{{ .Chart.Name }}-conf-files"
